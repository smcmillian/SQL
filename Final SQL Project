--1.Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT FirstName,LastName Customerid, Country
FROM chinook.customers
WHERE country <> 'USA';

--2.how only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE country='Brazil';

--3.Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.invoiceid, invoices.BillingCountry,invoices.InvoiceDate
FROM chinook.customers
INNER JOIN chinook.invoices
ON customers.CustomerId=invoices.CustomerId
WHERE country= 'Brazil';


--4.Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title LIKE 'Sales Support Agent';

--5.Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry
FROM chinook.invoices;

--6.Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.LastName,employees.FirstName, invoices.InvoiceId
FROM chinook.employees
INNER JOIN chinook.customers
ON customers.SupportRepID=employees.EmployeeID
INNER JOIN chinook.invoices
ON customers.customerid=invoices.customerid;

--7.Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT customers.LastName,customers.FirstName,customers.Country,invoices.Total, employees.LastName,employees.FirstName
FROM chinook.employees
JOIN chinook.customers
ON customers.SupportRepID=employees.EmployeeID
INNER JOIN chinook.invoices
ON customers.customerid=invoices.customerid;


--8.How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%';
 
--9.What are the total sales for 2009?

SELECT ROUND(SUM(Total),1) as Total
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%';

--10.Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name,invoice_items.InvoiceLineiD
FROM chinook.invoice_items
INNER JOIN chinook.tracks
ON invoice_items.trackid=tracks.trackid;

--11.Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.name, artists.name,invoice_items.InvoiceLineiD
FROM chinook.invoice_items
LEFT JOIN chinook.tracks
ON invoice_items.trackid=tracks.trackid
INNER JOIN albums
ON tracks.albumid=albums.albumid
LEFT JOIN chinook.artists 
ON artists.ArtistID=albums.ArtistID;


--12.Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.name AS 'Track Name', albums.title AS 'Album Title',media_types.Name AS 'Media Type',genres.Name AS 'Genre Name'
FROM chinook.tracks
LEFT JOIN chinook.media_types
ON media_types.mediatypeid=tracks.mediatypeid
JOIN chinook.albums
ON tracks.Albumid=albums.AlbumId
JOIN chinook.genres
ON genres.GenreId=tracks.GenreID;

--13.Show the total sales made by each sales agent.
SELECT employees.LastName, employees.FirstName, ROUND(SUM(invoices.Total),2) as 'Total Sales'
FROM chinook.employees

JOIN chinook.Customers
ON employees.EmployeeId=customers.SupportRepId

JOIN chinook.invoices
ON customers.CustomerId=invoices.CustomerId

WHERE employees.Title = 'Sales Support Agent' 
GROUP BY employees.FirstName;

--14.Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total),2) as 'Total Sales'
FROM chinook.employees

JOIN chinook.customers
ON employees.employeeId=customers.SupportRepId

JOIN chinook.invoices
ON customers.CustomerId=invoices.CustomerId

WHERE InvoiceDate LIKE '%2009%'
AND employees.Title = 'Sales Support Agent'

GROUP BY employees.LastName
ORDER BY (ROUND(SUM(invoices.Total),2)) DESC LIMIT 1;
